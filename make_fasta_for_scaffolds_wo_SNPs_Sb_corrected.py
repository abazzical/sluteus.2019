#!/usr/local/pkg/MCBPython2010/epd-6.2-2-rh5-x86_64/bin/python
import sys
import subprocess
from Bio import SeqIO
from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord
from Bio.Alphabet import generic_dna


ref = open("Suilu4_AssemblyScaffolds.fasta", "r")
scafs = SeqIO.to_dict(SeqIO.parse(ref, "fasta"))#

samples=["502931_1178750", "502931_1178751", "502931_1178744", "502931_1178745", "502931_1178746", "502931_1178747", "502931_1178748", "502931_1178749", "502931_1143059", "502931_1143060", "502931_1151569", "502931_1143062", "502931_1143054", "502931_1143056", "502931_1143075", "502931_1143076", "502931_1151566", "502931_1151567", "502931_1151576", "502931_1151572", "502931_1143066", "502931_1143067", "502931_1143068", "502931_1151574", "502931_1143052", "502931_1143050", "502931_1143051", "502931_1143078", "502931_1151580", "502931_1151581", "502931_1151582", "502931_1143070", "502931_1143073", "502931_1151559", "502931_1151560", "502931_1151561", "502931_1151562", "502931_1151564"]


#This script uses a temporary file created in the previous step - MAKE SURE TO USE THE CORRECT TMP.txt FILE!!!

polymorphism = open("tmp.txt", 'r')

pol = []


for line in polymorphism:
    pol.append(line.strip())

polym = list(set(pol))

#print unique_pol


# '''
# polym=["1000","1001","1002","1006","1009","100","1010","1011","1013","1014","1016","1017","101","1020","1021","1023","1024","1029","102","1034","103","1045","104","1052","1054","1055","105","1062","1064","1065","1066","1067","106","1070","1074","1075","1076","1077","107","1087","1088","1089","108","1091","1094","1095","1097","1099","109","10","1101","1102","1103","1104","1106","1107","1108","1109","110","1110","1116","111","1124","1128","112","1130","1131","1132","113","1140","1145","1147","114","1150","1151","1155","1156","115","1163","1164","1167","116","1170","1173","1174","1176","1177","117","1184","1185","118","1196","119","11","1206","1209","120","1210","1211","1216","1218","121","1220","1229","122","1231","1232","1235","1236","1238","1239","123","1240","1241","1242","1245","124","1252","1256","1257","1258","125","1260","1262","1263","1265","1266","1267","126","1271","1279","127","1280","1281","1284","1285","128","1290","1297","129","12","1300","1303","1305","130","1311","1313","1315","1317","1319","131","1320","1321","1326","132","1339","133","1343","1345","134","1352","1353","1357","1358","135","1361","1366","1368","136","1371","1374","1375","1377","1378","137","1380","1384","138","1392","1393","1394","1395","1398","1399","139","13","1400","1401","1405","140","1410","1411","1414","1418","141","1425","1426","1429","142","1430","1434","1437","143","1441","1443","1446","1448","144","145","1462","146","1472","1474","1477","147","1481","1482","1485","1486","1487","1488","148","1493","1494","1496","1498","149","14","1500","1501","1506","150","1515","151","1523","1527","152","1530","1537","153","1542","1547","154","155","156","157","158","159","15","160","161","162","163","164","165","166","167","168","169","16","170","171","172","173","174","175","176","177","178","179","17","180","181","182","183","184","185","186","187","188","189","18","191","192","193","194","195","196","197","198","199","19","1","200","201","202","203","204","205","206","207","208","209","20","210","211","212","213","214","215","216","217","218","219","21","220","221","222","223","224","225","226","227","228","229","22","230","231","232","233","234","235","236","237","238","239","23","240","241","242","244","245","246","247","248","249","24","250","251","252","253","254","256","257","258","25","260","261","262","263","264","265","266","268","269","26","270","271","272","274","275","276","277","278","279","27","280","281","282","283","284","285","286","287","288","28","290","291","293","294","295","297","298","299","29","2","300","301","302","304","305","306","307","308","309","30","310","311","312","313","314","315","316","317","319","31","321","322","323","325","326","327","328","329","32","331","333","334","335","336","337","338","339","33","340","341","342","344","345","347","348","349","34","351","353","354","355","357","358","359","35","363","364","366","367","368","369","36","370","371","372","373","375","376","377","379","37","380","381","382","383","384","385","386","387","389","38","391","393","395","396","397","398","399","39","3","400","401","402","403","406","407","40","410","411","412","413","414","417","418","419","41","420","421","423","424","425","426","427","429","42","430","433","434","435","436","43","442","443","444","445","447","44","452","453","455","457","458","45","460","461","462","465","467","468","469","46","470","472","474","476","477","479","47","480","481","483","488","489","48","490","492","495","497","498","49","4","505","506","50","510","513","514","515","518","519","51","520","521","522","524","525","528","52","530","533","536","53","540","541","542","547","54","550","551","554","559","55","560","561","562","564","566","567","569","56","572","573","575","577","578","579","57","586","588","58","590","593","594","595","597","598","59","5","605","606","60","611","612","613","617","618","619","61","622","627","628","62","632","636","638","63","640","642","647","649","64","651","652","655","656","658","659","65","660","665","668","669","66","671","672","674","677","67","684","68","691","698","69","6","704","707","709","70","717","71","720","721","724","72","73","742","746","74","752","755","756","758","75","766","76","778","77","780","784","787","78","795","797","79","7","80","810","816","819","81","823","824","826","827","82","832","835","838","83","841","842","845","846","847","848","849","84","850","855","85","865","86","871","873","876","878","87","880","882","885","888","889","88","896","897","898","89","8","902","90","910","911","916","91","926","92","930","931","938","939","93","949","94","955","956","957","95","966","96","972","97","982","985","987","988","989","98","990","993","996","99","9"]
# 
# '''

c=0
for scaf in scafs:
    parts=scaf.split('_')
    if parts[1] not in polym:
        print scaf
        c+=1
        OUT=open("2019-01-28dik_scaffold_%s.fasta" %parts[1], 'a')
        for strain in samples:
            a=SeqRecord(scafs[scaf].seq,id=scaf+"_"+strain,description="")
            OUT.write(a.format("fasta"))

print "made fasta files for %i scaffolds" %c
